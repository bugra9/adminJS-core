"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function _inherits(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},_createClass=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),_get=function t(e,n,a){null===e&&(e=Function.prototype);var i=Object.getOwnPropertyDescriptor(e,n);if(void 0===i){var s=Object.getPrototypeOf(e);return null===s?void 0:t(s,n,a)}if("value"in i)return i.value;var l=i.get;if(void 0!==l)return l.call(a)},TestClass=function(t){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};_classCallCheck(this,e);var n=_possibleConstructorReturn(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t));return n.function=[],n.buffer=[],n}return _inherits(e,t),_createClass(e,[{key:"inputInit",value:function(t){}},{key:"navigation",value:function(){this.function.push("navigation"),_get(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"navigation",this).call(this)}},{key:"write",value:function(t,e){arguments.length>2&&void 0!==arguments[2]&&arguments[2];this.function.push("write"),this.buffer.push(t)}},{key:"loadMenu",value:function(){this.function.push("loadMenu"),this.menu=[{title:"Yazar",path:"list/_other/author/",color:"teal",count:"25"},{html:'<div class="ui  small header center aligned inverted">Advanced</div>'},{title:"Extensions",path:"list/_extension/",color:"pink",count:"12"}]}},{key:"loadOption",value:function(){this.options={"/":[{attr:"file.path",title:"Konum",list:{show:!1},edit:{order:1,section:2},input:{type:"text"}},{attr:"title",title:"Başlık",list:{show:!0},edit:{order:1},input:{type:"text"}},{attr:"content",title:"İçerik",list:{show:!1},edit:{type:2,order:1,section:3},input:{type:"text",wysiwyg:!0}}]}}},{key:"loadData",value:function(){this.data=[{file:{path:"a.md"},content:{title:"Deneme",a1:"deneme a1",content:"Deneme Yazısı"}},{file:{path:"b/a.md"},content:{title:"Deneme2",b1:"aa",content:"Deneme Yazısı2"}},{file:{path:"b/b.md"},content:{title:"Deneme3",b1:"dd",content:"Deneme Yazısı3"}}]}}]),e}(AdminJS),testClass=new TestClass({test:"test"});if(testClass.run(),window.chai)var expect=chai.expect,assert=chai.assert;describe("Ön tanımlı ayarlar kontrol ediliyor...",function(){it("Ayarlar tanımlanmış olmalı",function(){assert(void 0!==testClass.settings,"this.settings => undefined")}),it("Hata ayıklama seviyesi tanımlanmış olmalı.",function(){assert(void 0!==testClass.settings.debug,"this.settings.debug => undefined")}),it("Dışarıdan ayarlama yapılabilmeli",function(){assert("test"==testClass.settings.test,"this.settings.test => undefined")}),it("Veriler yükleniyor",function(){assert(Array.isArray(testClass.data),"this.data => not array")}),it("Menü yükleniyor",function(){assert(Array.isArray(testClass.menu),"this.menu => not array")}),it("Seçenekler yükleniyor",function(){assert("object"===_typeof(testClass.options),"this.options => not object")})}),describe("Olaylar",function(){it("Url değişince sistemin tepki vermesi",function(t){testClass.function=[],window.location.href="#list/"+Math.floor(100*Math.random()+1)+"/",setTimeout(function(){"navigation"==testClass.function[0]?t():t("Url değişince navigation fonksiyonu çalışmadı.")},100)})}),describe("Menü",function(){it("Menü oluşturuluyor",function(){testClass.buffer=[],testClass.createMenu(),assert(testClass.buffer[0].replace(/[ \t\n]+/g,"")=='\n        <a class="item" href="#list/_other/author/">\n            Yazar \n            <div class="ui left pointing label teal">25</div>\n        </a>\n        <div class="ui  small header center aligned inverted">Advanced</div>\n        <a class="item" href="#list/_extension/">\n            Extensions \n            <div class="ui left pointing label pink">12</div>\n        </a>'.replace(/[ \t\n]+/g,""),"Menü düzgün oluşturulmamış.")})}),describe("Veri İşlevleri",function(){it('findAll() => file.path == "b/a.md"',function(){var t=testClass.findAll([{attr:"file.path",value:"b/a.md",op:"=="}]);assert(t.length>0,"Kayıt bulunamadı.")}),it('findAll() => "b/" dizini altındaki dosyalar aranıyor...',function(){var t=testClass.findAll([{attr:"file.path",value:"b/",op:"path"}]);assert(t.length>0,"Kayıt bulunamadı.")}),it('condition("==", "deneme", "deneme") == true',function(){assert(testClass.condition("==","deneme","deneme"),"Kayıt bulunamadı.")}),it('condition("==", "deneme", "deneme2") == false',function(){assert(!testClass.condition("==","deneme","deneme2"),"Kayıt bulunamadı.")}),it('condition(">", 3, 2) == true',function(){assert(testClass.condition(">",3,2),"Kayıt bulunamadı.")}),it('condition(">", 3, 3) == false',function(){assert(!testClass.condition(">",3,3),"Kayıt bulunamadı.")}),it('condition(">=", 3, 3) == true',function(){assert(testClass.condition(">=",3,3),"Kayıt bulunamadı.")}),it('condition(">=", 3, 4) == false',function(){assert(!testClass.condition(">=",3,4),"Kayıt bulunamadı.")}),it('condition("<", 1, 2) == true',function(){assert(testClass.condition("<",1,2),"Kayıt bulunamadı.")}),it('condition("<", 3, 3) == false',function(){assert(!testClass.condition("<",3,3),"Kayıt bulunamadı.")}),it('condition("<=", 3, 3) == true',function(){assert(testClass.condition("<=",3,3),"Kayıt bulunamadı.")}),it('condition("<=", 5, 4) == false',function(){assert(!testClass.condition("<=",5,4),"Kayıt bulunamadı.")}),it('condition("[]", 2, [2, 5]) == true',function(){assert(testClass.condition("[]",2,[2,5]),"Kayıt bulunamadı.")}),it('condition("[]", 4, [2, 5]) == false',function(){assert(!testClass.condition("[]",4,[2,5]),"Kayıt bulunamadı.")}),it('condition("contain", [2, 5], 2) == true',function(){assert(testClass.condition("contain",[2,5],2),"Kayıt bulunamadı.")}),it('condition("contain", [2, 5], 4) == false',function(){assert(!testClass.condition("contain",[2,5],4),"Kayıt bulunamadı.")}),it('condition("contain", "b/deneme", "den") == true',function(){assert(testClass.condition("contain","b/deneme","den"),"Kayıt bulunamadı.")}),it('condition("contain", "b/deneme", "den2") == false',function(){assert(!testClass.condition("contain","b/deneme","den2"),"Kayıt bulunamadı.")}),it('condition("path", "b/deneme/aa", "b/deneme/") == true',function(){assert(testClass.condition("path","b/deneme/aa","b/deneme/"),"Kayıt bulunamadı.")}),it('condition("path", "b/deneme/aa", "b/den") == false',function(){assert(!testClass.condition("path","b/deneme/aa","b/den"),"Kayıt bulunamadı.")}),it('condition("path", "b/deneme/aa", "b/") == false',function(){assert(!testClass.condition("path","b/deneme/aa","b/"),"Kayıt bulunamadı.")}),it("getAttrList() -> Ortak özellik testi",function(){var t=testClass.getAttrList([0,1],testClass.getType("/b/"));assert(1==t.length&&"title"==t[0],"Kayıt bulunamadı.")}),it("getAttrList() -> Benzer özellik testi",function(){var t=testClass.getAttrList([1,2],testClass.getType("/b/"));assert(2==t.length&&"title"==t[0]&&"b1"==t[1],"Kayıt bulunamadı.")}),it("getDataAttr() -> file.path",function(){var t=testClass.getDataAttr("file.path",1);assert("b/a.md"==t,"Kayıt bulunamadı.")}),it("getDataAttr() -> b1",function(){var t=testClass.getDataAttr("b1",1);assert("aa"==t,"Kayıt bulunamadı.")})}),describe("Tür belirleme işlevleri",function(){it("defaultType() -> text",function(){var t=testClass.defaultType("deneme","deneme");assert("text"==t.input.type,"Kayıt bulunamadı.")}),it("defaultType() -> array",function(){var t=testClass.defaultType("deneme",[2,4]);assert("select"==t.input.type,"Kayıt bulunamadı.")}),it("getType()",function(){var t=testClass.getType("/");assert(3==Object.keys(t).length,"Kayıt bulunamadı.")})}),describe("navigationList()",function(){it("Listeleme başlık oluşumu",function(){testClass.buffer=[],testClass.navigationList("b/"),assert(testClass.buffer[0].replace(/[ \t\n]+/g,"")=="<tr><th></th><th>Başlık</th><th>b1</th><th>İşlemler</th></tr>".replace(/[ \t\n]+/g,""),"Tablo başlığı doğru oluşturulmamış.")}),it("Listeleme içerik oluşumu",function(){testClass.buffer=[],testClass.navigationList("b/"),assert(testClass.buffer[1].replace(/[ \t\n]+/g,"")=='\n      <tr><td class="collapsing" title="b/a.md"><i class="file outline icon"></i></td><td>Deneme2</td><td>aa</td><td class="right aligned collapsing">\n        <a href="#edit/b/a.md"><i class="edit icon"></i></a>\n        <a href="#toggle/b/a.md"><i class="circle icon green"></i></a>\n        <a href="#delete/b/a.md"><i class="remove icon red"></i></a>\n      </td></tr><tr><td class="collapsing" title="b/b.md"><i class="file outline icon"></i></td><td>Deneme3</td><td>dd</td><td class="right aligned collapsing">\n        <a href="#edit/b/b.md"><i class="edit icon"></i></a>\n        <a href="#toggle/b/b.md"><i class="circle icon green"></i></a>\n        <a href="#delete/b/b.md"><i class="remove icon red"></i></a>\n      </td></tr>'.replace(/[ \t\n]+/g,""),"Tablo içeriği doğru oluşturulmamış.")}),it("Listeleme dizin oluşumu",function(){testClass.buffer=[],testClass.navigationList(""),assert(testClass.buffer[2].replace(/[ \t\n]+/g,"")=='\n      <a class="item" href="#list/b/">\n        <i class="big folder icon"></i>\n        <div class="content">\n          <div class="header">b</div>\n        </div>\n      </a>'.replace(/[ \t\n]+/g,""),"Dizinler doğru oluşturulmamış.")}),it("getDirs()",function(){var t=testClass.getDirs("");assert(1==t.length&&"b"==t[0],"Kayıt bulunamadı.")})}),describe("navigationEdit()",function(){it("Genel bilgi girişlerinin oluşumu",function(){testClass.buffer=[],testClass.navigationEdit("a.md"),assert(testClass.buffer[0].replace(/[ \t\n]+/g,"")=='\n      <h4 class="ui dividing header">Genel Bilgiler</h4>\n      <div class="field">\n        <label>Başlık</label>\n        <input type="text" name="title" value="Deneme" />\n      </div>'.replace(/[ \t\n]+/g,""),"Tablo başlığı doğru oluşturulmamış.")}),it("Yayınlama bilgi girişlerinin oluşumu",function(){testClass.buffer=[],testClass.navigationEdit("a.md"),assert(testClass.buffer[1].replace(/[ \t\n]+/g,"")=='\n      <h4 class="ui dividing header">Yayınlama Bilgileri</h4>\n      <div class="field">\n        <label>Konum</label>\n        <input type="text" name="file.path" value="a.md" />\n      </div>'.replace(/[ \t\n]+/g,""),"Tablo başlığı doğru oluşturulmamış.")}),it("Belirsiz girişlerinin oluşumu",function(){testClass.buffer=[],testClass.navigationEdit("a.md"),assert(testClass.buffer[2].replace(/[ \t\n]+/g,"")=='\n      <div class="field">\n        <label>a1</label>\n        <input type="text" name="a1" value="deneme a1" />\n      </div>'.replace(/[ \t\n]+/g,""),"Tablo başlığı doğru oluşturulmamış.")}),it("İçerik girişlerinin oluşumu",function(){testClass.buffer=[],testClass.navigationEdit("a.md"),assert(testClass.buffer[3].replace(/[ \t\n]+/g,"")=='\n      <div class="field">\n        <label>İçerik</label>\n        <textarea class="mdEditor" rows="undefined" name="content">Deneme Yazısı</textarea>\n      </div>'.replace(/[ \t\n]+/g,""),"Tablo başlığı doğru oluşturulmamış.")})}),describe("Other Action",function(){it("navigationDelete()",function(){var t=testClass.data.slice(0);testClass.navigationDelete("b/a.md");var e=testClass.findAll([{attr:"file.path",value:"b/a.md",op:"path"}]);assert(0===e.length,"Kayıt bulunamadı."),testClass.data=t}),it("navigationToggle()",function(){testClass.navigationToggle("b/a.md");var t=testClass.findAll([{attr:"file.path",value:"b/_a.md",op:"path"}]);assert(1==t.length,"Kayıt bulunamadı."),testClass.navigationToggle("b/_a.md")})});